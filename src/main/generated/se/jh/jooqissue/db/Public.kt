/*
 * This file is generated by jOOQ.
 */
package se.jh.jooqissue.db


import javax.annotation.processing.Generated

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl

import se.jh.jooqissue.db.tables.Child
import se.jh.jooqissue.db.tables.Parent


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.14.11",
        "schema version:1.0"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC = Public()
    }

    /**
     * The table <code>public.child</code>.
     */
    val CHILD get() = Child.CHILD

    /**
     * The table <code>public.parent</code>.
     */
    val PARENT get() = Parent.PARENT

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Child.CHILD,
        Parent.PARENT
    )
}
